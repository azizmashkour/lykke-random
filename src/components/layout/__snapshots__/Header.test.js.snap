// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render header component tests has one instance of header 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="header-title"
        >
          <span>
            Discover random images with a filter option
          </span>
        </div>,
        <header
          className="app-header"
        >
          <img
            alt="logo"
            className="app-logo"
            src="logo.svg"
          />
          <p>
            Filter images by related categories. Add 
            <code>
              ?mode=forest
            </code>
              in the URL params for forest images.
          </p>
          <a
            className="app-link"
            href="https://reactjs.org"
            rel="noopener noreferrer"
            target="_blank"
          >
            Learn React
          </a>
        </header>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span>
            Discover random images with a filter option
          </span>,
          "className": "header-title",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Discover random images with a filter option",
          },
          "ref": null,
          "rendered": "Discover random images with a filter option",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="app-logo"
              src="logo.svg"
            />,
            <p>
              Filter images by related categories. Add 
              <code>
                ?mode=forest
              </code>
                in the URL params for forest images.
            </p>,
            <a
              className="app-link"
              href="https://reactjs.org"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn React
            </a>,
          ],
          "className": "app-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "app-logo",
              "src": "logo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Filter images by related categories. Add ",
                <code>
                  ?mode=forest
                </code>,
                "  in the URL params for forest images.",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Filter images by related categories. Add ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "?mode=forest",
                },
                "ref": null,
                "rendered": "?mode=forest",
                "type": "code",
              },
              "  in the URL params for forest images.",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Learn React",
              "className": "app-link",
              "href": "https://reactjs.org",
              "rel": "noopener noreferrer",
              "target": "_blank",
            },
            "ref": null,
            "rendered": "Learn React",
            "type": "a",
          },
        ],
        "type": "header",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="header-title"
          >
            <span>
              Discover random images with a filter option
            </span>
          </div>,
          <header
            className="app-header"
          >
            <img
              alt="logo"
              className="app-logo"
              src="logo.svg"
            />
            <p>
              Filter images by related categories. Add 
              <code>
                ?mode=forest
              </code>
                in the URL params for forest images.
            </p>
            <a
              className="app-link"
              href="https://reactjs.org"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn React
            </a>
          </header>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span>
              Discover random images with a filter option
            </span>,
            "className": "header-title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Discover random images with a filter option",
            },
            "ref": null,
            "rendered": "Discover random images with a filter option",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="app-logo"
                src="logo.svg"
              />,
              <p>
                Filter images by related categories. Add 
                <code>
                  ?mode=forest
                </code>
                  in the URL params for forest images.
              </p>,
              <a
                className="app-link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>,
            ],
            "className": "app-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "app-logo",
                "src": "logo.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Filter images by related categories. Add ",
                  <code>
                    ?mode=forest
                  </code>,
                  "  in the URL params for forest images.",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Filter images by related categories. Add ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "?mode=forest",
                  },
                  "ref": null,
                  "rendered": "?mode=forest",
                  "type": "code",
                },
                "  in the URL params for forest images.",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Learn React",
                "className": "app-link",
                "href": "https://reactjs.org",
                "rel": "noopener noreferrer",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "Learn React",
              "type": "a",
            },
          ],
          "type": "header",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
